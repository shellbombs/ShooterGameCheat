#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroFPP_AnimationBlueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass HeroFPP_AnimationBlueprint.HeroFPP_AnimationBlueprint_C
// 0x13F0 (0x16B0 - 0x02C0)
class UHeroFPP_AnimationBlueprint_C final : public UAnimInstance
{
public:
	uint8                                         Pad_1929[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x02F8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x0398(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0418(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x0498(0x00A0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0538(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0560(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0588(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x05B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x05D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0600(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0628(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0650(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0678(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x06A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x06C8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x06F0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0790(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0810(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0890(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x08C0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0960(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x09E0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0A60(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x0A90(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0B30(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0BB0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0C30(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0C60(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x0CE0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0D80(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0E00(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0E30(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0ED0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0F50(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0FD0(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1000(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x10A0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1120(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x11A0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x11D0(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1280(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x13D8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1400(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x1428(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x1470(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x14B8(0x00A0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1558(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x15A0(0x0048)()
	bool                                          IsJumping;                                         // 0x15E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsRifle;                                           // 0x15E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsRunning;                                         // 0x15EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTargeting;                                       // 0x15EB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         JumpTime;                                          // 0x15EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x15F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWalking;                                         // 0x15F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192A[0x3];                                     // 0x15F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UPhysicalMaterial*, class USoundCue*> Footstep_Map;                                      // 0x15F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundCue*                              Footstep_Sound;                                    // 0x1648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UPhysicalMaterial*, class USoundCue*> Jumpland_Map;                                      // 0x1650(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundCue*                              Jumpland_Sound;                                    // 0x16A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HeroFPP_AnimationBlueprint(int32 EntryPoint);
	void AnimNotify_Jumpland();
	void AnimNotify_Footstep();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_HeroFPP_AnimationBlueprint_AnimGraphNode_TransitionResult_EBA6C0224B9F3AC09D7303B401AB8889();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_HeroFPP_AnimationBlueprint_AnimGraphNode_TransitionResult_663925D24DF32B6AC7F34AB905521A2F();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HeroFPP_AnimationBlueprint_C">();
	}
	static class UHeroFPP_AnimationBlueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeroFPP_AnimationBlueprint_C>();
	}
};
static_assert(alignof(UHeroFPP_AnimationBlueprint_C) == 0x000010, "Wrong alignment on UHeroFPP_AnimationBlueprint_C");
static_assert(sizeof(UHeroFPP_AnimationBlueprint_C) == 0x0016B0, "Wrong size on UHeroFPP_AnimationBlueprint_C");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, UberGraphFrame) == 0x0002C0, "Member 'UHeroFPP_AnimationBlueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_BlendListByBool_8) == 0x0002F8, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer_13) == 0x000398, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer_12) == 0x000418, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_BlendListByBool_7) == 0x000498, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_TransitionResult_10) == 0x000538, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_TransitionResult_9) == 0x000560, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_TransitionResult_8) == 0x000588, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_TransitionResult_7) == 0x0005B0, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_TransitionResult_6) == 0x0005D8, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_TransitionResult_5) == 0x000600, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_TransitionResult_4) == 0x000628, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_TransitionResult_3) == 0x000650, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_TransitionResult_2) == 0x000678, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_TransitionResult_1) == 0x0006A0, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_TransitionResult) == 0x0006C8, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_BlendListByBool_6) == 0x0006F0, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer_11) == 0x000790, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer_10) == 0x000810, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_StateResult_5) == 0x000890, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_BlendListByBool_5) == 0x0008C0, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer_9) == 0x000960, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer_8) == 0x0009E0, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_StateResult_4) == 0x000A60, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_BlendListByBool_4) == 0x000A90, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer_7) == 0x000B30, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer_6) == 0x000BB0, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_StateResult_3) == 0x000C30, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer_5) == 0x000C60, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_BlendListByBool_3) == 0x000CE0, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer_4) == 0x000D80, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_StateResult_2) == 0x000E00, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_BlendListByBool_2) == 0x000E30, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer_3) == 0x000ED0, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer_2) == 0x000F50, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_StateResult_1) == 0x000FD0, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_BlendListByBool_1) == 0x001000, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer_1) == 0x0010A0, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SequencePlayer) == 0x001120, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_StateResult) == 0x0011A0, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_StateMachine) == 0x0011D0, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_SaveCachedPose) == 0x001280, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_UseCachedPose_1) == 0x0013D8, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_UseCachedPose) == 0x001400, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_Slot_3) == 0x001428, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_Slot_2) == 0x001470, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_BlendListByBool) == 0x0014B8, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_Slot_1) == 0x001558, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, AnimGraphNode_Slot) == 0x0015A0, "Member 'UHeroFPP_AnimationBlueprint_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, IsJumping) == 0x0015E8, "Member 'UHeroFPP_AnimationBlueprint_C::IsJumping' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, IsRifle) == 0x0015E9, "Member 'UHeroFPP_AnimationBlueprint_C::IsRifle' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, IsRunning) == 0x0015EA, "Member 'UHeroFPP_AnimationBlueprint_C::IsRunning' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, IsTargeting) == 0x0015EB, "Member 'UHeroFPP_AnimationBlueprint_C::IsTargeting' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, JumpTime) == 0x0015EC, "Member 'UHeroFPP_AnimationBlueprint_C::JumpTime' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, Speed) == 0x0015F0, "Member 'UHeroFPP_AnimationBlueprint_C::Speed' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, IsWalking) == 0x0015F4, "Member 'UHeroFPP_AnimationBlueprint_C::IsWalking' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, Footstep_Map) == 0x0015F8, "Member 'UHeroFPP_AnimationBlueprint_C::Footstep_Map' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, Footstep_Sound) == 0x001648, "Member 'UHeroFPP_AnimationBlueprint_C::Footstep_Sound' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, Jumpland_Map) == 0x001650, "Member 'UHeroFPP_AnimationBlueprint_C::Jumpland_Map' has a wrong offset!");
static_assert(offsetof(UHeroFPP_AnimationBlueprint_C, Jumpland_Sound) == 0x0016A0, "Member 'UHeroFPP_AnimationBlueprint_C::Jumpland_Sound' has a wrong offset!");

}

