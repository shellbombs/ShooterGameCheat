#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroTPP_AnimBlueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass HeroTPP_AnimBlueprint.HeroTPP_AnimBlueprint_C
// 0x0DA0 (0x1060 - 0x02C0)
class UHeroTPP_AnimBlueprint_C final : public UAnimInstance
{
public:
	uint8                                         Pad_1913[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpace_1;                        // 0x02C8(0x00E8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x03B0(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0478(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x04C0(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0580(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x05C8(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0720(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0748(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0770(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x07A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x07C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x07F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0818(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0840(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0868(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0890(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x08B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x08E0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0908(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0988(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpace;                          // 0x09B8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0AA0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0AD0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0B50(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0B80(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0C00(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0C30(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0CB0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0CE0(0x00B0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0D90(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0DB0(0x0020)()
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik;                              // 0x0DD0(0x0190)()
	float                                         AimPitch;                                          // 0x0F60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimYaw;                                            // 0x0F64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0F68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Direction;                                         // 0x0F6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsJumping;                                         // 0x0F70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1914[0x3];                                     // 0x0F71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         JumpTime;                                          // 0x0F74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRunning;                                         // 0x0F78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1915[0x7];                                     // 0x0F79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             EffectorTransform;                                 // 0x0F80(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TMap<class UPhysicalMaterial*, class USoundCue*> Footstep_Map;                                      // 0x0FB0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UPhysicalMaterial*, class USoundCue*> Jumpland_Map;                                      // 0x1000(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundCue*                              Jumpland_Sound;                                    // 0x1050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Footstep_Sound;                                    // 0x1058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HeroTPP_AnimBlueprint(int32 EntryPoint);
	void AnimNotify_Footstep();
	void AnimNotify_Jumpland();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_HeroTPP_AnimBlueprint_AnimGraphNode_TransitionResult_0C5A88D14987F964D888D88152ACB029();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_HeroTPP_AnimBlueprint_AnimGraphNode_TransitionResult_D7F0836F46C360751AE6BC95922DEC11();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_HeroTPP_AnimBlueprint_AnimGraphNode_TransitionResult_2C883E9C42B867B2498D799B0A738D11();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_HeroTPP_AnimBlueprint_AnimGraphNode_TransitionResult_2321A9F84E5D11B5A25F98953F512310();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HeroTPP_AnimBlueprint_C">();
	}
	static class UHeroTPP_AnimBlueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeroTPP_AnimBlueprint_C>();
	}
};
static_assert(alignof(UHeroTPP_AnimBlueprint_C) == 0x000010, "Wrong alignment on UHeroTPP_AnimBlueprint_C");
static_assert(sizeof(UHeroTPP_AnimBlueprint_C) == 0x001060, "Wrong size on UHeroTPP_AnimBlueprint_C");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, UberGraphFrame) == 0x0002C0, "Member 'UHeroTPP_AnimBlueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_BlendSpace_1) == 0x0002C8, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_BlendSpace_1' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_ApplyAdditive) == 0x0003B0, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_Slot_1) == 0x000478, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_LayeredBoneBlend) == 0x0004C0, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_Slot) == 0x000580, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_SaveCachedPose) == 0x0005C8, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_UseCachedPose_1) == 0x000720, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_UseCachedPose) == 0x000748, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_Root) == 0x000770, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_TransitionResult_8) == 0x0007A0, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_TransitionResult_7) == 0x0007C8, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_TransitionResult_6) == 0x0007F0, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_TransitionResult_5) == 0x000818, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_TransitionResult_4) == 0x000840, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_TransitionResult_3) == 0x000868, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_TransitionResult_2) == 0x000890, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_TransitionResult_1) == 0x0008B8, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_TransitionResult) == 0x0008E0, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_SequencePlayer_3) == 0x000908, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_StateResult_4) == 0x000988, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_BlendSpace) == 0x0009B8, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_BlendSpace' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_StateResult_3) == 0x000AA0, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_SequencePlayer_2) == 0x000AD0, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_StateResult_2) == 0x000B50, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_SequencePlayer_1) == 0x000B80, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_StateResult_1) == 0x000C00, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_SequencePlayer) == 0x000C30, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_StateResult) == 0x000CB0, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_StateMachine) == 0x000CE0, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_ComponentToLocalSpace) == 0x000D90, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_LocalToComponentSpace) == 0x000DB0, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AnimGraphNode_Fabrik) == 0x000DD0, "Member 'UHeroTPP_AnimBlueprint_C::AnimGraphNode_Fabrik' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AimPitch) == 0x000F60, "Member 'UHeroTPP_AnimBlueprint_C::AimPitch' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, AimYaw) == 0x000F64, "Member 'UHeroTPP_AnimBlueprint_C::AimYaw' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, Speed) == 0x000F68, "Member 'UHeroTPP_AnimBlueprint_C::Speed' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, Direction) == 0x000F6C, "Member 'UHeroTPP_AnimBlueprint_C::Direction' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, IsJumping) == 0x000F70, "Member 'UHeroTPP_AnimBlueprint_C::IsJumping' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, JumpTime) == 0x000F74, "Member 'UHeroTPP_AnimBlueprint_C::JumpTime' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, IsRunning) == 0x000F78, "Member 'UHeroTPP_AnimBlueprint_C::IsRunning' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, EffectorTransform) == 0x000F80, "Member 'UHeroTPP_AnimBlueprint_C::EffectorTransform' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, Footstep_Map) == 0x000FB0, "Member 'UHeroTPP_AnimBlueprint_C::Footstep_Map' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, Jumpland_Map) == 0x001000, "Member 'UHeroTPP_AnimBlueprint_C::Jumpland_Map' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, Jumpland_Sound) == 0x001050, "Member 'UHeroTPP_AnimBlueprint_C::Jumpland_Sound' has a wrong offset!");
static_assert(offsetof(UHeroTPP_AnimBlueprint_C, Footstep_Sound) == 0x001058, "Member 'UHeroTPP_AnimBlueprint_C::Footstep_Sound' has a wrong offset!");

}

