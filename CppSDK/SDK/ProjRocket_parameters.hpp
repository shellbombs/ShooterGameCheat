#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProjRocket

#include "Basic.hpp"


namespace SDK::Params
{

// Function ProjRocket.ProjRocket_C.ExecuteUbergraph_ProjRocket
// 0x0030 (0x0030 - 0x0000)
struct ProjRocket_C_ExecuteUbergraph_ProjRocket final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1910[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1911[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_CustomEvent_DamageType;                     // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjRocket_C_ExecuteUbergraph_ProjRocket) == 0x000008, "Wrong alignment on ProjRocket_C_ExecuteUbergraph_ProjRocket");
static_assert(sizeof(ProjRocket_C_ExecuteUbergraph_ProjRocket) == 0x000030, "Wrong size on ProjRocket_C_ExecuteUbergraph_ProjRocket");
static_assert(offsetof(ProjRocket_C_ExecuteUbergraph_ProjRocket, EntryPoint) == 0x000000, "Member 'ProjRocket_C_ExecuteUbergraph_ProjRocket::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProjRocket_C_ExecuteUbergraph_ProjRocket, K2Node_CustomEvent_DamagedActor) == 0x000008, "Member 'ProjRocket_C_ExecuteUbergraph_ProjRocket::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(ProjRocket_C_ExecuteUbergraph_ProjRocket, K2Node_CustomEvent_Damage) == 0x000010, "Member 'ProjRocket_C_ExecuteUbergraph_ProjRocket::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(ProjRocket_C_ExecuteUbergraph_ProjRocket, K2Node_CustomEvent_DamageType) == 0x000018, "Member 'ProjRocket_C_ExecuteUbergraph_ProjRocket::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(ProjRocket_C_ExecuteUbergraph_ProjRocket, K2Node_CustomEvent_InstigatedBy) == 0x000020, "Member 'ProjRocket_C_ExecuteUbergraph_ProjRocket::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(ProjRocket_C_ExecuteUbergraph_ProjRocket, K2Node_CustomEvent_DamageCauser) == 0x000028, "Member 'ProjRocket_C_ExecuteUbergraph_ProjRocket::K2Node_CustomEvent_DamageCauser' has a wrong offset!");

// Function ProjRocket.ProjRocket_C.OnTakeAnyDamage_Event
// 0x0028 (0x0028 - 0x0000)
struct ProjRocket_C_OnTakeAnyDamage_Event final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1912[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjRocket_C_OnTakeAnyDamage_Event) == 0x000008, "Wrong alignment on ProjRocket_C_OnTakeAnyDamage_Event");
static_assert(sizeof(ProjRocket_C_OnTakeAnyDamage_Event) == 0x000028, "Wrong size on ProjRocket_C_OnTakeAnyDamage_Event");
static_assert(offsetof(ProjRocket_C_OnTakeAnyDamage_Event, DamagedActor) == 0x000000, "Member 'ProjRocket_C_OnTakeAnyDamage_Event::DamagedActor' has a wrong offset!");
static_assert(offsetof(ProjRocket_C_OnTakeAnyDamage_Event, Damage) == 0x000008, "Member 'ProjRocket_C_OnTakeAnyDamage_Event::Damage' has a wrong offset!");
static_assert(offsetof(ProjRocket_C_OnTakeAnyDamage_Event, DamageType) == 0x000010, "Member 'ProjRocket_C_OnTakeAnyDamage_Event::DamageType' has a wrong offset!");
static_assert(offsetof(ProjRocket_C_OnTakeAnyDamage_Event, InstigatedBy) == 0x000018, "Member 'ProjRocket_C_OnTakeAnyDamage_Event::InstigatedBy' has a wrong offset!");
static_assert(offsetof(ProjRocket_C_OnTakeAnyDamage_Event, DamageCauser) == 0x000020, "Member 'ProjRocket_C_OnTakeAnyDamage_Event::DamageCauser' has a wrong offset!");

}

