#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Sanctuary_Audio

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Sanctuary_Audio.Sanctuary_Audio_C.ExecuteUbergraph_Sanctuary_Audio
// 0x0168 (0x0168 - 0x0000)
struct Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1944[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ActorBoundEvent_OverlappedActor_4;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_OtherActor_4;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_C*                          K2Node_DynamicCast_AsPlayer_Pawn;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1945[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1946[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1947[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1948[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_3;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_4;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_OverlappedActor_3;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_OtherActor_3;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_OverlappedActor_2;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_OtherActor_2;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_C*                          K2Node_DynamicCast_AsPlayer_Pawn_1;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1949[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_C*                          K2Node_DynamicCast_AsPlayer_Pawn_2;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_194A[0x5];                                     // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ActorBoundEvent_OverlappedActor_1;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_OtherActor_1;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_OverlappedActor;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_OtherActor;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_C*                          K2Node_DynamicCast_AsPlayer_Pawn_3;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_194B[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_C*                          K2Node_DynamicCast_AsPlayer_Pawn_4;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_194C[0x5];                                     // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_194D[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_194E[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0160(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio) == 0x000008, "Wrong alignment on Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio");
static_assert(sizeof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio) == 0x000168, "Wrong size on Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, EntryPoint) == 0x000000, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::EntryPoint' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_ActorBoundEvent_OverlappedActor_4) == 0x000008, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_ActorBoundEvent_OverlappedActor_4' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_ActorBoundEvent_OtherActor_4) == 0x000010, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_ActorBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_DynamicCast_AsPlayer_Pawn) == 0x000020, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_DynamicCast_AsPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_GetPlayerController_ReturnValue_1) == 0x000040, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_GetPlayerController_ReturnValue_2) == 0x000048, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_IsValid_ReturnValue_2) == 0x000051, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000058, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000060, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_GetPlayerController_ReturnValue_3) == 0x000068, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_GetPlayerController_ReturnValue_4) == 0x000070, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_IsValid_ReturnValue_3) == 0x000078, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_IsValid_ReturnValue_4) == 0x000079, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_K2_GetPawn_ReturnValue_3) == 0x000080, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_K2_GetPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_K2_GetPawn_ReturnValue_4) == 0x000088, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_K2_GetPawn_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_ActorBoundEvent_OverlappedActor_3) == 0x000090, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_ActorBoundEvent_OverlappedActor_3' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_ActorBoundEvent_OtherActor_3) == 0x000098, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_ActorBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_ActorBoundEvent_OverlappedActor_2) == 0x0000A0, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_ActorBoundEvent_OverlappedActor_2' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_ActorBoundEvent_OtherActor_2) == 0x0000A8, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_ActorBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_DynamicCast_AsPlayer_Pawn_1) == 0x0000B0, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_DynamicCast_AsPlayer_Pawn_1' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_DynamicCast_AsPlayer_Pawn_2) == 0x0000C0, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_DynamicCast_AsPlayer_Pawn_2' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0000C9, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0000CA, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_ActorBoundEvent_OverlappedActor_1) == 0x0000D0, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_ActorBoundEvent_OverlappedActor_1' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_ActorBoundEvent_OtherActor_1) == 0x0000D8, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_ActorBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_ActorBoundEvent_OverlappedActor) == 0x0000E0, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_ActorBoundEvent_OverlappedActor' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_ActorBoundEvent_OtherActor) == 0x0000E8, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_ActorBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_DynamicCast_AsPlayer_Pawn_3) == 0x0000F0, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_DynamicCast_AsPlayer_Pawn_3' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_DynamicCast_bSuccess_3) == 0x0000F8, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_DynamicCast_AsPlayer_Pawn_4) == 0x000100, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_DynamicCast_AsPlayer_Pawn_4' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, K2Node_DynamicCast_bSuccess_4) == 0x000108, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000109, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x00010A, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_GetPlayerPawn_ReturnValue) == 0x000110, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_IsValid_ReturnValue_5) == 0x000118, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00011C, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_BreakVector_X) == 0x000128, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_BreakVector_Y) == 0x00012C, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_BreakVector_Z) == 0x000130, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_RandomFloatInRange_ReturnValue) == 0x000134, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_Add_FloatFloat_ReturnValue) == 0x000138, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00013C, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000140, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_MakeVector_ReturnValue) == 0x000144, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000150, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000158, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x00015C, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio, CallFunc_K2_SetTimer_ReturnValue) == 0x000160, "Member 'Sanctuary_Audio_C_ExecuteUbergraph_Sanctuary_Audio::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function Sanctuary_Audio.Sanctuary_Audio_C.BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_8_ActorEndOverlapSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_8_ActorEndOverlapSignature__DelegateSignature final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_8_ActorEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_8_ActorEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_8_ActorEndOverlapSignature__DelegateSignature) == 0x000010, "Wrong size on Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_8_ActorEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_8_ActorEndOverlapSignature__DelegateSignature, OverlappedActor) == 0x000000, "Member 'Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_8_ActorEndOverlapSignature__DelegateSignature::OverlappedActor' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_8_ActorEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_8_ActorEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");

// Function Sanctuary_Audio.Sanctuary_Audio_C.BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_7_ActorEndOverlapSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_7_ActorEndOverlapSignature__DelegateSignature final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_7_ActorEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_7_ActorEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_7_ActorEndOverlapSignature__DelegateSignature) == 0x000010, "Wrong size on Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_7_ActorEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_7_ActorEndOverlapSignature__DelegateSignature, OverlappedActor) == 0x000000, "Member 'Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_7_ActorEndOverlapSignature__DelegateSignature::OverlappedActor' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_7_ActorEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_7_ActorEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");

// Function Sanctuary_Audio.Sanctuary_Audio_C.BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_6_ActorBeginOverlapSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_6_ActorBeginOverlapSignature__DelegateSignature final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_6_ActorBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_6_ActorBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_6_ActorBeginOverlapSignature__DelegateSignature) == 0x000010, "Wrong size on Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_6_ActorBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_6_ActorBeginOverlapSignature__DelegateSignature, OverlappedActor) == 0x000000, "Member 'Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_6_ActorBeginOverlapSignature__DelegateSignature::OverlappedActor' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_6_ActorBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_02_2_K2Node_ActorBoundEvent_6_ActorBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");

// Function Sanctuary_Audio.Sanctuary_Audio_C.BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_5_ActorBeginOverlapSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_5_ActorBeginOverlapSignature__DelegateSignature final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_5_ActorBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_5_ActorBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_5_ActorBeginOverlapSignature__DelegateSignature) == 0x000010, "Wrong size on Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_5_ActorBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_5_ActorBeginOverlapSignature__DelegateSignature, OverlappedActor) == 0x000000, "Member 'Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_5_ActorBeginOverlapSignature__DelegateSignature::OverlappedActor' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_5_ActorBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Sanctuary_Audio_C_BndEvt__AudioTrigger_Balcony_01_K2Node_ActorBoundEvent_5_ActorBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");

// Function Sanctuary_Audio.Sanctuary_Audio_C.BndEvt__AudioTrigger_Interior_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Sanctuary_Audio_C_BndEvt__AudioTrigger_Interior_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Interior_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Sanctuary_Audio_C_BndEvt__AudioTrigger_Interior_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Interior_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature) == 0x000010, "Wrong size on Sanctuary_Audio_C_BndEvt__AudioTrigger_Interior_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Interior_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature, OverlappedActor) == 0x000000, "Member 'Sanctuary_Audio_C_BndEvt__AudioTrigger_Interior_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature::OverlappedActor' has a wrong offset!");
static_assert(offsetof(Sanctuary_Audio_C_BndEvt__AudioTrigger_Interior_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Sanctuary_Audio_C_BndEvt__AudioTrigger_Interior_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");

}

